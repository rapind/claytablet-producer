#summary High-level overview of the Clay Tablet 2.0 Architecture

[http://www.flickr.com/photos/rycoleman/2037232863/ http://farm3.static.flickr.com/2391/2037232863_f21b1d90b1.jpg] 

= Architecture Overview =

== Introduction ==

This page outlines the high-level architecture of Clay Tablet 2.0.

== High-Level Architecture ==

[http://www.flickr.com/photos/rycoleman/2037930856/ http://farm3.static.flickr.com/2307/2037930856_3c07191100_o.jpg]

In the context of implementation all source systems (CMS, ECMS, Data Feeds, etc.) are considered "Producers" and all destination systems (TMS, GMS, SBMT, RBMT, etc.) are considered "Providers". 

*You are currently viewing the "Producer" open sourced client & Code samples.*

Clay Tablet maintains a centralized Platform application that consists of an Inbound Platform Message Queue, where all requests from both Producers & Providers are received, and a series of Processing Servers which manage the routing and handling of requests. 

Each unique connected system also has its own dedicated message queue and storage account through which the Clay Tablet Platform communicates with it.

=== Hierarchy ===

[http://www.flickr.com/photos/rycoleman/2037982168/ http://farm3.static.flickr.com/2283/2037982168_95f921c5b4_o.jpg]

A "Producer" is a single client or entity responsible for one or more connected systems. 

Each connected system has a unique *producer account* which is associated with a specific producer. 

=== Anatomy of a Connection ===

[http://www.flickr.com/photos/rycoleman/2037204769/ http://farm3.static.flickr.com/2385/2037204769_29d6a48e6f_o.jpg]

Clay Tablet’s high-availability asynchronous platform uses Message Queue technologies *(1)* to communicate with connected systems on both the content management and translation technology sides. 

The connected system interacts with these message queues through REST-based web service calls. *(2)* 

Outgoing events are transmitted to Clay Tablet’s common, centralized Platform Queue *(3)* and each connected system has their own dedicated inbound message queue *(4)* for receiving events form Clay Tablet.